{"version":3,"sources":["webpack:///main.bundle.js","webpack:///webpack/bootstrap 1c08adcff2ff27c923de","webpack:///./src/main.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///Card.vue","webpack:///MediaList.vue","webpack:///Favorite.vue","webpack:///Home.vue","webpack:///./src/App.vue?c44f","webpack:///./src/components/Card.vue?fb8f","webpack:///./~/process/browser.js","webpack:///./src/App.vue?d818","webpack:///./src/components/Card.vue?3e61","webpack:///./src/components/MediaList.vue?dcb4","webpack:///./src/views/Favorite.vue?119f","webpack:///./src/views/Home.vue?8cce","webpack:///./src/views/Me.vue?5380","webpack:///./src/App.vue","webpack:///./src/components/Card.vue","webpack:///./src/components/MediaList.vue","webpack:///./src/views/Favorite.vue","webpack:///./src/views/Home.vue","webpack:///./src/views/Me.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/App.vue?9d6d","webpack:///./src/components/Card.vue?5c29","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_App","_App2","_Home","_Home2","_Favorite","_Favorite2","_Me","_Me2","use","router","map","/","name","component","/home","/favorite","/me","beforeEach","window","scrollTo","start","list","toString","result","i","this","length","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","fn","memo","apply","arguments","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","Object","defineProperty","value","props","_MediaList","_MediaList2","data","items","link","img","title","price","sales","description","components","VMediaList","_Card","_Card2","cards","agree","comment","VCard","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","args","Array","prototype","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","__vue_script__","__vue_template__","template","global","factory","Target","path","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","l","substr","route","eachRoute","baseRoute","callback","hasOwnProperty","slice","addRouteCallback","add","isArray","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","parse","names","specificity","charAt","segments","split","results","val","match","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","params","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","replace","decodeURIComponent","warn","msg","console","exports$1","Vue","config","debug","stack","resolvePath","base","relative","append","query","pop","unshift","isPromise","then","getRouteConfig","$options","resolveAsyncComponent","cb","resolver","_","resolve","_resolveComponent","Component","mapParams","undefined","key","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","constructor","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","isPlainObject","keys","forEach","resolvedVal","$set","all","isPlainOjbect","toArray","applyOverride","_Vue$util","util","extend","defineReactive","init","_init","root","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","vm","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","protocol","location","hostname","port","_bind","isObject","addClass","removeClass","priority","el","__v_link_active","unwatch","$watch","onRouteUpdate","activeEl","tagName","getAttribute","onClick","addEventListener","exact","prevActiveClass","activeClass","e","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","pathname","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","history","formatPath","removeAttribute","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","get","child","isEqual","chars","returned","oCreate","create","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","source","VERSION","hashRE","HTML5History","_ref","onChange","rootRE","baseEl","querySelector","_this","listener","url","search","hash","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","self","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","step","context","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","getElementById","scrollX","offsetTop","currentParams","targetParams","encodeURI","install","externalVue","content","locals","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","bind$1","ctx","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","tail","_keymap","pushFilter","lastFilterIndex","trim","tokens","filterTokenRE","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE$1","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","action","selector","NODE_ENV","inDoc","node","doc","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","on$1","event","useCapture","setClass","cls","isIE9","SVGElement","className","classList","tar","extractContent","asFragment","rawContent","isTemplate","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","createAnchor","persist","createComment","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","coerceProp","assertProp","required","expectedType","valid","String","Function","formatType","formatValue","validator","coerce","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","newVal","initMixin","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_runtimeData","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","user","q","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","keyFilter","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","getValue","multi","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","isHidden","offsetWidth","getClientRects","stringToObject","contains$1","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","some","transitionRE","bindRE","dirAttrRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","runtimeData","propsData","optionsDataFn","optionsData","oldData","removeVm","computed","userDef","methods","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","Directive","_locked","_listeners","_host","_vue_directives","lifecycleMixin","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","compiler","parsers","text$1","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE","$interpolate","$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","delimiter","convertArray","$value","$key","orderBy","sortKey","order","extractFragment","main","__v_selected","__VUE_DEVTOOLS_GLOBAL_HOOK__","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","hasConsole","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","importantRE","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","warnDuplicate","trans","stagger","_preProcess","_postProcess","swap","for","if","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","cached","getCached","newComponent","waitingFor","extraOptions","defer","_inactive","transitionMode","vClass","handleArray","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","tryCompile","elseBlock","namedSlot","elementDirectives","_namedSlot","transitions","partials"],"mappings":"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SAAShI,EAAQD,GAEtB,YAEA8H,QAAOC,eAAe/H,EAAS,cAC7BgI,OAAO,IAuBThI,cACEiI,OMnbH,WN2bM,SAAShI,EAAQD,EAASH,GAE/B,YAUA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFqH,OAAOC,eAAe/H,EAAS,cAC7BgI,OAAO,GAGT,IAAIE,GAAarI,EAAoB,IAEjCsI,EAAc3H,EAAuB0H,EAIzClI,eACEoI,KAAM,WACJ,OACEC,QACEC,KOndT,4BPodSC,IOndT,4FPodSC,MOndT,aPodSC,MOndT,IPodSC,MOndT,IPodSC,YOldT,uCPodSL,KOldT,4BPmdSC,IOldT,4FPmdSC,MOldT,SPmdSC,MOldT,IPmdSC,MOldT,IPmdSC,YOjdT,uCPmdSL,KOjdT,4BPkdSC,IOjdT,4FPkdSC,MOjdT,YPkdSC,MOjdT,IPkdSC,MOjdT,IPkdSC,YOhdT,wCPkdSL,KOhdT,4BPidSC,IOhdT,4FPidSC,MOhdT,SPidSC,MOhdT,IPidSC,MOhdT,IPidSC,YO/cT,uCPidSL,KO/cT,4BPgdSC,IO/cT,4FPgdSC,MO/cT,YPgdSC,MO/cT,IPgdSC,MO/cT,IPgdSC,YO3cT,0CPgdGC,YO7cHC,WAAAV,gBPieM,SAASlI,EAAQD,EAASH,GAE/B,YAUA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFqH,OAAOC,eAAe/H,EAAS,cAC7BgI,OAAO,GAGT,IAAIc,GAAQjJ,EAAoB,IAE5BkJ,EAASvI,EAAuBsI,EAIpC9I,eACEoI,KAAM,WACJ,OACEY,QACEV,KQ9gBT,4BR+gBSC,IQ9gBT,4FR+gBSI,YQ9gBT,qCR+gBSM,MQ9gBT,IR+gBSC,QQ7gBT,KR+gBSZ,KQ7gBT,4BR8gBSC,IQ7gBT,4FR8gBSI,YQ7gBT,qCR8gBSM,MQ7gBT,IR8gBSC,QQ5gBT,KR8gBSZ,KQ5gBT,4BR6gBSC,IQ5gBT,4FR6gBSI,YQ5gBT,+BR6gBSM,MQ5gBT,IR6gBSC,QQxgBT,OR6gBGN,YQ1gBHO,MAAAJ,gBR8iBM,SAAS9I,EAAQD,GAEtB,YA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","file":"main.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(26);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(23);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _App = __webpack_require__(17);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Home = __webpack_require__(21);\n\t\n\tvar _Home2 = _interopRequireDefault(_Home);\n\t\n\tvar _Favorite = __webpack_require__(20);\n\t\n\tvar _Favorite2 = _interopRequireDefault(_Favorite);\n\t\n\tvar _Me = __webpack_require__(22);\n\t\n\tvar _Me2 = _interopRequireDefault(_Me);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// install router\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\t// routing\n\tvar router = new _vueRouter2.default();\n\t\n\trouter.map({\n\t  '/': {\n\t    name: 'home',\n\t    component: _Home2.default\n\t  },\n\t  '/home': {\n\t    component: _Home2.default\n\t  },\n\t  '/favorite': {\n\t    component: _Favorite2.default\n\t  },\n\t  '/me': {\n\t    component: _Me2.default\n\t  }\n\t});\n\t\n\trouter.beforeEach(function () {\n\t  window.scrollTo(0, 0);\n\t});\n\t\n\t// router.redirect({\n\t//   '*': '/home'\n\t// });\n\t\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// <template>\n\t//   <a :href=\"card.link\" data-transition='slide-in'>\n\t//     <div class=\"card color-default\">\n\t//       <div style=\"\" valign=\"bottom\" class=\"card-header color-white no-border no-padding\">\n\t//         <img class='card-cover' :src=\"card.img \" alt=\"\">\n\t//       </div>\n\t//       <div class=\"card-content\">\n\t//         <div class=\"card-content-inner\">\n\t//           <p>{{card.description}}</p>\n\t//         </div>\n\t//       </div>\n\t//       <div class=\"card-footer\">\n\t//         <span class=\"link\">赞({{card.agree}})</span>\n\t//         <span class=\"link\">评论({{card.comment}})</span>\n\t//       </div>\n\t//     </div>\n\t//   </a>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t  props: ['card']\n\t};\n\t// </script>\n\t//\n\t// <style>\n\t// .card-header {\n\t//   height: 10rem;\n\t//   overflow: hidden;\n\t// }\n\t// </style>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// <template>\n\t// <div class=\"list-block media-list\">\n\t//   <ul>\n\t//     <li v-for=\"item in items\">\n\t//       <a :href=\"item.link\" class=\"item-link item-content\" data-transition='slide-in'>\n\t//         <div class=\"item-media\"><img :src=\"item.img\" width=\"80\"></div>\n\t//         <div class=\"item-inner\">\n\t//           <div class=\"item-title-row\">\n\t//             <div class=\"item-title\">{{item.title}}</div>\n\t//             <div class=\"item-after\">${{item.price}}</div>\n\t//           </div>\n\t//           <div class=\"item-subtitle\">月销{{item.sales}}笔</div>\n\t//           <div class=\"item-text\">{{item.description}}</div>\n\t//         </div>\n\t//       </a>\n\t//     </li>\n\t//   </ul>\n\t// </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t  props: ['items']\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _MediaList = __webpack_require__(19);\n\t\n\tvar _MediaList2 = _interopRequireDefault(_MediaList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      items: [{\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gdp.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n\t        title: 'ROZENE家纺床品',\n\t        price: 120,\n\t        sales: 203,\n\t        description: 'ROZENE春纯棉四件套 床上春夏 床单被套四件套全棉天丝四件套春夏'\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gdp.alicdn.com/bao/uploaded/i2/TB1mEnmHXXXXXXHapXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n\t        title: '美式床品套件',\n\t        price: 150,\n\t        sales: 145,\n\t        description: 'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套'\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gdp.alicdn.com/bao/uploaded/i4/TB13mgfHpXXXXcVXFXXXXXXXXXX_!!2-item_pic.png_240x240.jpg',\n\t        title: 'Rozene居家馆',\n\t        price: 120,\n\t        sales: 345,\n\t        description: 'Rozen 高档家纺品牌 床上用品夏100%天丝四件套 夏季贡缎欧美式'\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gdp.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n\t        title: '美式床品套件',\n\t        price: 150,\n\t        sales: 145,\n\t        description: 'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套'\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gdp.alicdn.com/bao/uploaded/i4/TB13mgfHpXXXXcVXFXXXXXXXXXX_!!2-item_pic.png_240x240.jpg',\n\t        title: 'Rozene居家馆',\n\t        price: 120,\n\t        sales: 345,\n\t        description: 'Rozen 高档家纺品牌 床上用品夏100%天丝四件套 夏季贡缎欧美式'\n\t      }]\n\t    };\n\t  },\n\t\n\t  components: {\n\t    VMediaList: _MediaList2.default\n\t  }\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\t// <template>\n\t// <div>\n\t//   <v-media-list :items=\"items\"></v-media-list>\n\t//   <div class=\"infinite-scroll-preloader\">\n\t//     <div class=\"preloader\"></div>\n\t//   </div>\n\t// </div>\n\t// </template>\n\t//\n\t// <script>\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Card = __webpack_require__(18);\n\t\n\tvar _Card2 = _interopRequireDefault(_Card);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      cards: [{\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gd1.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n\t        description: 'ROZENE春纯棉四件套 床上春夏 床单被套四件套全棉天丝四件套春夏',\n\t        agree: 120,\n\t        comment: 20\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gd2.alicdn.com/bao/uploaded/i2/TB1mEnmHXXXXXXHapXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n\t        description: 'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套',\n\t        agree: 120,\n\t        comment: 20\n\t      }, {\n\t        link: '/examples/baichuan/detail',\n\t        img: '//gd2.alicdn.com/bao/uploaded/i2/TB1QtUmGVXXXXbgaXXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n\t        description: '美式床品套件 四件套 家纺全棉四件套 纯棉被套4件套床单',\n\t        agree: 120,\n\t        comment: 20\n\t      }]\n\t    };\n\t  },\n\t\n\t  components: {\n\t    VCard: _Card2.default\n\t  }\n\t};\n\t// </script>\n\n\t/* generated by vue-loader */\n\t// <template>\n\t// <div>\n\t//   <header class=\"bar bar-nav\">\n\t//     <a class=\"button button-link button-nav pull-right open-popup\" data-popup=\".popup-about\">\n\t//       关于\n\t//       <span class=\"icon icon-menu\"></span>\n\t//     </a>\n\t//     <h1 class=\"title\">sui-mobile+vue的demo演示</h1>\n\t//   </header>\n\t//   <div class=\"content pull-to-refresh-content page-home infinite-scroll\" id='home-page'>\n\t//     <div class=\"pull-to-refresh-layer\">\n\t//       <div class=\"preloader\"></div>\n\t//       <div class=\"pull-to-refresh-arrow\"></div>\n\t//     </div>\n\t//     <!-- 这里是页面内容区 -->\n\t//     <div class=\"list\">\n\t//       <v-card v-for=\"card in cards\" :card=\"card\"></v-card>\n\t//     </div>\n\t//     <div class=\"infinite-scroll-preloader\">\n\t//       <div class=\"preloader\"></div>\n\t//     </div>\n\t//   </div>\n\t// </div>\n\t// </template>\n\t//\n\t// <script>\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// <template>\n\t//   <div class=\"page-settings\">\n\t//     <div class=\"list-block media-list person-card\">\n\t//       <ul>\n\t//         <li>\n\t//           <div href=\"#\" class=\"item-content\">\n\t//             <div class=\"item-media\"><img src=\"https://avatars2.githubusercontent.com/u/9363528?v=3&s=460\" width=\"80\"></div>\n\t//             <div class=\"item-inner\">\n\t//               <div class=\"item-title-row\">\n\t//                 <div class=\"item-title\">咸鱼君</div>\n\t//               </div>\n\t//               <div class=\"item-subtitle\">Time is money</div>\n\t//               <div class=\"item-text\"><strong>528</strong>关注</div>\n\t//             </div>\n\t//           </div>\n\t//         </li>\n\t//       </ul>\n\t//     </div>\n\t//     <div class=\"row text-center\">\n\t//       <div class=\"col-25\">\n\t//         <h4>12</h4>\n\t//         <div class=\"color-gray\">待付款</div>\n\t//       </div>\n\t//       <div class=\"col-25\">\n\t//         <h4>5</h4>\n\t//         <div class=\"color-gray\">待发货</div>\n\t//       </div>\n\t//       <div class=\"col-25\">\n\t//         <h4>2</h4>\n\t//         <div class=\"color-gray\">待收货</div>\n\t//       </div>\n\t//       <div class=\"col-25\">\n\t//         <h4>85</h4>\n\t//         <div class=\"color-gray\">待评价</div>\n\t//       </div>\n\t//     </div>\n\t//     <div class=\"list-block list\">\n\t//       <ul>\n\t//         <li class=\"item-content item-link\">\n\t//           <div class=\"item-media\"><i class=\"icon icon-settings\"></i></div>\n\t//           <div class=\"item-inner\">\n\t//             <div class=\"item-title\">账号密码</div>\n\t//           </div>\n\t//         </li>\n\t//         <li class=\"item-content item-link\">\n\t//           <div class=\"item-media\"><i class=\"icon icon-me\"></i></div>\n\t//           <div class=\"item-inner\">\n\t//             <div class=\"item-title\">个人资料</div>\n\t//           </div>\n\t//         </li>\n\t//         <li class=\"item-content item-link\">\n\t//           <div class=\"item-media\"><i class=\"icon icon-message\"></i></div>\n\t//           <div class=\"item-inner\">\n\t//             <div class=\"item-title\">消息通知</div>\n\t//           </div>\n\t//         </li>\n\t//         <li class=\"item-content item-link\">\n\t//           <div class=\"item-media\"><i class=\"icon icon-star\"></i></div>\n\t//           <div class=\"item-inner\">\n\t//             <div class=\"item-title\">我的收藏</div>\n\t//           </div>\n\t//         </li>\n\t//         <li class=\"item-content item-link\">\n\t//           <div class=\"item-media\"><i class=\"icon icon-friends\"></i></div>\n\t//           <div class=\"item-inner\">\n\t//             <div class=\"item-title\">帮助中心</div>\n\t//           </div>\n\t//         </li>\n\t//       </ul>\n\t//     </div>\n\t//     <div class=\"content-block\">\n\t//       <a href=\"/examples/baichuan/index.html\" data-transition='slide-out' class=\"button button-big button-fill button-danger\">退出登录</a>\n\t//     </div>\n\t//   </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {};\n\t// </script>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".fade-transition{-webkit-transition:opacity .3s ease;transition:opacity .3s ease}.fade-enter,.fade-leave{opacity:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".card-header{height:10rem;overflow:hidden}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"page page-current\\\"> <nav class=\\\"bar bar-tab\\\"> <a class=tab-item v-link=\\\"{ path: '/home' }\\\"> <span class=\\\"icon icon-home\\\"></span> <span class=tab-label>首页</span> </a> <a class=tab-item v-link=\\\"{ path: '/favorite' }\\\" data-transition=slide-in> <span class=\\\"icon icon-star\\\"></span> <span class=tab-label>收藏</span> </a> <a class=tab-item v-link=\\\"{ path: '/me' }\\\" data-transition=slide-in> <span class=\\\"icon icon-me\\\"></span> <span class=tab-label>我</span> </a> </nav> <router-view transition=fade transition-mode=out-in keep-alive></router-view> </div>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<a :href=card.link data-transition=slide-in> <div class=\\\"card color-default\\\"> <div style=\\\"\\\" valign=bottom class=\\\"card-header color-white no-border no-padding\\\"> <img class=card-cover :src=\\\"card.img \\\" alt=\\\"\\\"> </div> <div class=card-content> <div class=card-content-inner> <p>{{card.description}}</p> </div> </div> <div class=card-footer> <span class=link>赞({{card.agree}})</span> <span class=link>评论({{card.comment}})</span> </div> </div> </a>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"list-block media-list\\\"> <ul> <li v-for=\\\"item in items\\\"> <a :href=item.link class=\\\"item-link item-content\\\" data-transition=slide-in> <div class=item-media><img :src=item.img width=80></div> <div class=item-inner> <div class=item-title-row> <div class=item-title>{{item.title}}</div> <div class=item-after>${{item.price}}</div> </div> <div class=item-subtitle>月销{{item.sales}}笔</div> <div class=item-text>{{item.description}}</div> </div> </a> </li> </ul> </div>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <v-media-list :items=items></v-media-list> <div class=infinite-scroll-preloader> <div class=preloader></div> </div> </div>\";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <header class=\\\"bar bar-nav\\\"> <a class=\\\"button button-link button-nav pull-right open-popup\\\" data-popup=.popup-about> 关于 <span class=\\\"icon icon-menu\\\"></span> </a> <h1 class=title>sui-mobile+vue的demo演示</h1> </header> <div class=\\\"content pull-to-refresh-content page-home infinite-scroll\\\" id=home-page> <div class=pull-to-refresh-layer> <div class=preloader></div> <div class=pull-to-refresh-arrow></div> </div>  <div class=list> <v-card v-for=\\\"card in cards\\\" :card=card></v-card> </div> <div class=infinite-scroll-preloader> <div class=preloader></div> </div> </div> </div>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-settings> <div class=\\\"list-block media-list person-card\\\"> <ul> <li> <div href=# class=item-content> <div class=item-media><img src=\\\"https://avatars2.githubusercontent.com/u/9363528?v=3&s=460\\\" width=80></div> <div class=item-inner> <div class=item-title-row> <div class=item-title>咸鱼君</div> </div> <div class=item-subtitle>Time is money</div> <div class=item-text><strong>528</strong>关注</div> </div> </div> </li> </ul> </div> <div class=\\\"row text-center\\\"> <div class=col-25> <h4>12</h4> <div class=color-gray>待付款</div> </div> <div class=col-25> <h4>5</h4> <div class=color-gray>待发货</div> </div> <div class=col-25> <h4>2</h4> <div class=color-gray>待收货</div> </div> <div class=col-25> <h4>85</h4> <div class=color-gray>待评价</div> </div> </div> <div class=\\\"list-block list\\\"> <ul> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-settings\\\"></i></div> <div class=item-inner> <div class=item-title>账号密码</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-me\\\"></i></div> <div class=item-inner> <div class=item-title>个人资料</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-message\\\"></i></div> <div class=item-inner> <div class=item-title>消息通知</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-star\\\"></i></div> <div class=item-inner> <div class=item-title>我的收藏</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-friends\\\"></i></div> <div class=item-inner> <div class=item-title>帮助中心</div> </div> </li> </ul> </div> <div class=content-block> <a href=/examples/baichuan/index.html data-transition=slide-out class=\\\"button button-big button-fill button-danger\\\">退出登录</a> </div> </div>\";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(24)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(25)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.11\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      var fullPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          fullPath = this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        fullPath = path ? path + '' : '';\n\t      }\n\t      return encodeURI(fullPath);\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(8);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(9);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.16\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on$1(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      this._runtimeData = options.data;\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t      return w.active;\n\t    });\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (process.env.NODE_ENV !== 'production') {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    var runtimeData;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n\t      this._runtimeData = null;\n\t    }\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.16';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (devtools) {\n\t  devtools.emit('init', Vue);\n\t} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(navigator.userAgent)) {\n\t  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(10)))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1c08adcff2ff27c923de\n **/","import Vue from 'vue'\nimport Router from 'vue-router'\nimport App from './App.vue'\nimport Home from './views/Home.vue'\nimport Favorite from './views/Favorite.vue'\nimport Me from './views/Me.vue'\n\n// install router\nVue.use(Router);\n\n// routing\nvar router = new Router();\n\nrouter.map({\n  '/': {\n    name: 'home',\n    component: Home,\n  },\n  '/home': {\n    component: Home\n  },\n  '/favorite': {\n    component: Favorite\n  },\n  '/me': {\n    component: Me\n  }\n});\n\nrouter.beforeEach(function () {\n  window.scrollTo(0, 0);\n});\n\n// router.redirect({\n//   '*': '/home'\n// });\n\nrouter.start(App, '#app');\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 0\n **/","<template>\n  <a :href=\"card.link\" data-transition='slide-in'>\n    <div class=\"card color-default\">\n      <div style=\"\" valign=\"bottom\" class=\"card-header color-white no-border no-padding\">\n        <img class='card-cover' :src=\"card.img \" alt=\"\">\n      </div>\n      <div class=\"card-content\">\n        <div class=\"card-content-inner\">\n          <p>{{card.description}}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <span class=\"link\">赞({{card.agree}})</span>\n        <span class=\"link\">评论({{card.comment}})</span>\n      </div>\n    </div>\n  </a>\n</template>\n\n<script>\nexport default {\n  props: ['card']\n}\n</script>\n\n<style>\n.card-header {\n  height: 10rem;\n  overflow: hidden;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Card.vue?348d2404\n **/","<template>\n<div class=\"list-block media-list\">\n  <ul>\n    <li v-for=\"item in items\">\n      <a :href=\"item.link\" class=\"item-link item-content\" data-transition='slide-in'>\n        <div class=\"item-media\"><img :src=\"item.img\" width=\"80\"></div>\n        <div class=\"item-inner\">\n          <div class=\"item-title-row\">\n            <div class=\"item-title\">{{item.title}}</div>\n            <div class=\"item-after\">${{item.price}}</div>\n          </div>\n          <div class=\"item-subtitle\">月销{{item.sales}}笔</div>\n          <div class=\"item-text\">{{item.description}}</div>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>\n</template>\n\n<script>\nexport default {\n  props: ['items']\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** MediaList.vue?4e97f669\n **/","<template>\n<div>\n  <v-media-list :items=\"items\"></v-media-list>\n  <div class=\"infinite-scroll-preloader\">\n    <div class=\"preloader\"></div>\n  </div>\n</div>\n</template>\n\n<script>\nimport VMediaList from '../components/MediaList.vue'\nexport default {\n  data () {\n    return {\n      items:[\n        {\n          link:'/examples/baichuan/detail',\n          img:'//gdp.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n          title:'ROZENE家纺床品',\n          price:120,\n          sales:203,\n          description:'ROZENE春纯棉四件套 床上春夏 床单被套四件套全棉天丝四件套春夏'\n        },\n        {\n          link:'/examples/baichuan/detail',\n          img:'//gdp.alicdn.com/bao/uploaded/i2/TB1mEnmHXXXXXXHapXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n          title:'美式床品套件',\n          price:150,\n          sales:145,\n          description:'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套'\n        },\n        {\n          link:'/examples/baichuan/detail',\n          img:'//gdp.alicdn.com/bao/uploaded/i4/TB13mgfHpXXXXcVXFXXXXXXXXXX_!!2-item_pic.png_240x240.jpg',\n          title:'Rozene居家馆',\n          price:120,\n          sales:345,\n          description:'Rozen 高档家纺品牌 床上用品夏100%天丝四件套 夏季贡缎欧美式'\n        },\n        {\n          link:'/examples/baichuan/detail',\n          img:'//gdp.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_240x240.jpg',\n          title:'美式床品套件',\n          price:150,\n          sales:145,\n          description:'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套'\n        },\n        {\n          link:'/examples/baichuan/detail',\n          img:'//gdp.alicdn.com/bao/uploaded/i4/TB13mgfHpXXXXcVXFXXXXXXXXXX_!!2-item_pic.png_240x240.jpg',\n          title:'Rozene居家馆',\n          price:120,\n          sales:345,\n          description:'Rozen 高档家纺品牌 床上用品夏100%天丝四件套 夏季贡缎欧美式'\n        },\n      ]\n    }\n  },\n  components:{\n    VMediaList\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Favorite.vue?799b76b2\n **/","<template>\n<div>\n  <header class=\"bar bar-nav\">\n    <a class=\"button button-link button-nav pull-right open-popup\" data-popup=\".popup-about\">\n      关于\n      <span class=\"icon icon-menu\"></span>\n    </a>\n    <h1 class=\"title\">sui-mobile+vue的demo演示</h1>\n  </header>\n  <div class=\"content pull-to-refresh-content page-home infinite-scroll\" id='home-page'>\n    <div class=\"pull-to-refresh-layer\">\n      <div class=\"preloader\"></div>\n      <div class=\"pull-to-refresh-arrow\"></div>\n    </div>\n    <!-- 这里是页面内容区 -->\n    <div class=\"list\">\n      <v-card v-for=\"card in cards\" :card=\"card\"></v-card>\n    </div>\n    <div class=\"infinite-scroll-preloader\">\n      <div class=\"preloader\"></div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport VCard from '../components/Card.vue'\n\nexport default {\n  data () {\n    return {\n      cards: [\n        {\n          link: '/examples/baichuan/detail',\n          img: '//gd1.alicdn.com/bao/uploaded/i1/TB1kzlgHVXXXXbtXpXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n          description:'ROZENE春纯棉四件套 床上春夏 床单被套四件套全棉天丝四件套春夏',\n          agree:120,\n          comment:20\n        },\n        {\n          link: '/examples/baichuan/detail',\n          img: '//gd2.alicdn.com/bao/uploaded/i2/TB1mEnmHXXXXXXHapXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n          description:'Roz居家美式高档床上用品纯棉4四件套全棉床单被套1.8m床上四件套',\n          agree:120,\n          comment:20\n        },\n        {\n          link: '/examples/baichuan/detail',\n          img: '//gd2.alicdn.com/bao/uploaded/i2/TB1QtUmGVXXXXbgaXXXXXXXXXXX_!!0-item_pic.jpg_640x640.jpg',\n          description:'美式床品套件 四件套 家纺全棉四件套 纯棉被套4件套床单',\n          agree:120,\n          comment:20\n        }\n      ]\n    }\n  },\n  components: {\n    VCard\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Home.vue?4a959a91\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".fade-transition{-webkit-transition:opacity .3s ease;transition:opacity .3s ease}.fade-enter,.fade-leave{opacity:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue\n ** module id = 8\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card-header{height:10rem;overflow:hidden}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Card.vue\n ** module id = 9\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"page page-current\\\"> <nav class=\\\"bar bar-tab\\\"> <a class=tab-item v-link=\\\"{ path: '/home' }\\\"> <span class=\\\"icon icon-home\\\"></span> <span class=tab-label>首页</span> </a> <a class=tab-item v-link=\\\"{ path: '/favorite' }\\\" data-transition=slide-in> <span class=\\\"icon icon-star\\\"></span> <span class=tab-label>收藏</span> </a> <a class=tab-item v-link=\\\"{ path: '/me' }\\\" data-transition=slide-in> <span class=\\\"icon icon-me\\\"></span> <span class=tab-label>我</span> </a> </nav> <router-view transition=fade transition-mode=out-in keep-alive></router-view> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \"<a :href=card.link data-transition=slide-in> <div class=\\\"card color-default\\\"> <div style=\\\"\\\" valign=bottom class=\\\"card-header color-white no-border no-padding\\\"> <img class=card-cover :src=\\\"card.img \\\" alt=\\\"\\\"> </div> <div class=card-content> <div class=card-content-inner> <p>{{card.description}}</p> </div> </div> <div class=card-footer> <span class=link>赞({{card.agree}})</span> <span class=link>评论({{card.comment}})</span> </div> </div> </a>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Card.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"list-block media-list\\\"> <ul> <li v-for=\\\"item in items\\\"> <a :href=item.link class=\\\"item-link item-content\\\" data-transition=slide-in> <div class=item-media><img :src=item.img width=80></div> <div class=item-inner> <div class=item-title-row> <div class=item-title>{{item.title}}</div> <div class=item-after>${{item.price}}</div> </div> <div class=item-subtitle>月销{{item.sales}}笔</div> <div class=item-text>{{item.description}}</div> </div> </a> </li> </ul> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/MediaList.vue\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<div> <v-media-list :items=items></v-media-list> <div class=infinite-scroll-preloader> <div class=preloader></div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/Favorite.vue\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div> <header class=\\\"bar bar-nav\\\"> <a class=\\\"button button-link button-nav pull-right open-popup\\\" data-popup=.popup-about> 关于 <span class=\\\"icon icon-menu\\\"></span> </a> <h1 class=title>sui-mobile+vue的demo演示</h1> </header> <div class=\\\"content pull-to-refresh-content page-home infinite-scroll\\\" id=home-page> <div class=pull-to-refresh-layer> <div class=preloader></div> <div class=pull-to-refresh-arrow></div> </div>  <div class=list> <v-card v-for=\\\"card in cards\\\" :card=card></v-card> </div> <div class=infinite-scroll-preloader> <div class=preloader></div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/Home.vue\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div class=page-settings> <div class=\\\"list-block media-list person-card\\\"> <ul> <li> <div href=# class=item-content> <div class=item-media><img src=\\\"https://avatars2.githubusercontent.com/u/9363528?v=3&s=460\\\" width=80></div> <div class=item-inner> <div class=item-title-row> <div class=item-title>咸鱼君</div> </div> <div class=item-subtitle>Time is money</div> <div class=item-text><strong>528</strong>关注</div> </div> </div> </li> </ul> </div> <div class=\\\"row text-center\\\"> <div class=col-25> <h4>12</h4> <div class=color-gray>待付款</div> </div> <div class=col-25> <h4>5</h4> <div class=color-gray>待发货</div> </div> <div class=col-25> <h4>2</h4> <div class=color-gray>待收货</div> </div> <div class=col-25> <h4>85</h4> <div class=color-gray>待评价</div> </div> </div> <div class=\\\"list-block list\\\"> <ul> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-settings\\\"></i></div> <div class=item-inner> <div class=item-title>账号密码</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-me\\\"></i></div> <div class=item-inner> <div class=item-title>个人资料</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-message\\\"></i></div> <div class=item-inner> <div class=item-title>消息通知</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-star\\\"></i></div> <div class=item-inner> <div class=item-title>我的收藏</div> </div> </li> <li class=\\\"item-content item-link\\\"> <div class=item-media><i class=\\\"icon icon-friends\\\"></i></div> <div class=item-inner> <div class=item-title>帮助中心</div> </div> </li> </ul> </div> <div class=content-block> <a href=/examples/baichuan/index.html data-transition=slide-out class=\\\"button button-big button-fill button-danger\\\">退出登录</a> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/Me.vue\n ** module id = 16\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 17\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\")\n__vue_script__ = require(\"!!babel-loader!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Card.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Card.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Card.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./MediaList.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./MediaList.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/MediaList.vue\n ** module id = 19\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Favorite.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Favorite.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/Favorite.vue\n ** module id = 20\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Home.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Home.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/Home.vue\n ** module id = 21\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Me.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Me.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/Me.vue\n ** module id = 22\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.11\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      var fullPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          fullPath = this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n        }\n      } else {\n        fullPath = path ? path + '' : '';\n      }\n      return encodeURI(fullPath);\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 23\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue\n ** module id = 24\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Card.vue\n ** module id = 25\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.16\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on$1(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    if (process.env.NODE_ENV !== 'production') {\n      this._runtimeData = options.data;\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.listener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    this.vm._watchers = this.vm._watchers.filter(function (w) {\n      return w.active;\n    });\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    var runtimeData;\n    if (process.env.NODE_ENV !== 'production') {\n      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n      this._runtimeData = null;\n    }\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.16';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (devtools) {\n  devtools.emit('init', Vue);\n} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(navigator.userAgent)) {\n  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 26\n ** module chunks = 0\n **/"],"sourceRoot":""}